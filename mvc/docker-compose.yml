version: "3"
services:
  db_mongo:
    container_name: stage1_s02_mongo
    image: mongo:6.0.10
    restart: always
    networks:
      - internal-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
  db_mysql:
    container_name: stage1_s02_mysql
    image: mysql:8.0.34
    restart: always
    networks:
      - internal-network
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_DATABASE: "database"
    healthcheck:
      test: "mysqladmin ping --silent"
      interval: 1s
      retries: 120
    deploy:
      resources:
        limits:
          cpus: "1"
  s02_mvc:
    container_name: stage1_s02_mvc
    build:
      dockerfile: Dockerfile
    ports:
      - "10201:10201"
      - "9021:9021"
    environment:
      JAVA_TOOL_OPTIONS: -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=9021 -Dcom.sun.management.jmxremote.rmi.port=9021 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${HOST_IP:-$DEFAULT_IP}
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://db_mysql/database?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "user",
        "spring.datasource.password" : "password",
        "spring.jpa.hibernate.ddl-auto" : "update",
        "spring.data.mongodb.host" : "db_mongo",
        "htim.service.member": "http://host.docker.internal:10101",
        "htim.service.market": "http://host.docker.internal:10201",
        "htim.service.menu": "http://host.docker.internal:10301",
        "htim.service.order": "http://host.docker.internal:10401",
        "htim.service.payment": "http://host.docker.internal:10501",
        "htim.service.delivery": "http://host.docker.internal:10601"
      }'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db_mongo:
        condition: service_healthy
      db_mysql:
        condition: service_healthy
    restart: always
    networks:
      - internal-network
    deploy:
      resources:
        limits:
          cpus: "1"
networks:
  internal-network:
    driver: bridge
